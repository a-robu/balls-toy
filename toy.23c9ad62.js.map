{"version":3,"sources":["src/vec2.js","src/toy.js"],"names":["Vec2","x","y","module","exports","require","constant","Object","ball","i","id","dx","dy","fx","fy","hit","size","Math","random","mass","apply_force_pair","ball_a","ball_b","dist","sqrt","penet","elastic","apply_wall_force","sim","canvas","width","height","apply_mouse_force","mouse_x","mouse_y","update_vel_reset_force","time","friction","gravity","paused","initial_balls","run","document","getElementById","context","getContext","window","innerWidth","innerHeight","list","Array","push","update","length","o","clearRect","fillStyle","beginPath","arc","PI","closePath","fill","stroke","addEventListener","e","clientX","offsetLeft","clientY","offsetTop","keyCode","setInterval"],"mappings":"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","file":"toy.23c9ad62.js","sourceRoot":"..","sourcesContent":["\nclass Vec2 {\n    constructor(x, y) {\n        this.x = x\n        this.y = y\n    }\n}\n\nmodule.exports = Vec2;\n","\r\n// This does not do anything, other than prove\r\n// the build process is working.\r\nconst Vec2 = require('./vec2');\r\n(new Vec2(1, 0));\r\n\r\nvar constant = new Object()\r\nconstant.friction = 1.02\r\nconstant.elastic = 2000\r\nconstant.gravity = 0\r\nconstant.time = 0.01\r\nconstant.paused = false\r\n\r\ninitial_balls = 100\r\n\r\nfunction ball(i, x, y)\r\n{\r\n    this.id = i\r\n    this.x = x\r\n    this.y = y\r\n    this.dx = 0.0\r\n    this.dy = -10.0\r\n    this.fx = 0.0\r\n    this.fy = 0.0\r\n    this.hit = 0.0\r\n    this.size = 20 + Math.random() * 10\r\n    this.mass = (this.size*this.size*3.14)/10\r\n}\r\n\r\nfunction apply_force_pair(ball_a, ball_b) {\r\n    var dx = (ball_a.x-ball_b.x)\r\n    var dy = (ball_a.y-ball_b.y)\r\n    var dist = Math.sqrt(dx*dx + dy*dy)\r\n    var penet = ball_a.size+ball_b.size-dist\r\n    if (penet > 0)\r\n    {\r\n        if (ball_a.hit < 225) {ball_a.hit += 30}\r\n        else {ball_a.hit = 255}\r\n        if (ball_b.hit < 255){ball_b.hit += 30}\r\n        else {ball_b.hit = 255}\r\n        ball_a.fx += dx*penet/dist*constant.elastic\r\n        ball_b.fx -= dx*penet/dist*constant.elastic\r\n        ball_a.fy += dy*penet/dist*constant.elastic\r\n        ball_b.fy -= dy*penet/dist*constant.elastic \r\n    }\r\n}\r\n\r\nfunction apply_wall_force(ball) {\r\n    // collision with the walls\r\n    if (ball.x - ball.size < 0)                 {ball.fx -= (ball.x - ball.size)*constant.elastic}\r\n    if (ball.x + ball.size > sim.canvas.width)  {ball.fx -= (ball.x +ball.size - sim.canvas.width)*constant.elastic}\r\n    if (ball.y - ball.size < 0)                 {ball.fy -= (ball.y - ball.size)*constant.elastic}\r\n    if (ball.y + ball.size > sim.canvas.height) {ball.fy -= (ball.y + ball.size - sim.canvas.height)*constant.elastic}\r\n}\r\n\r\nfunction apply_mouse_force(ball) {\r\n    var dx = (ball.x-sim.mouse_x)\r\n    var dy = (ball.y-sim.mouse_y)\r\n    var dist = Math.sqrt(dx*dx + dy*dy)\r\n    var penet = 100-dist\r\n    if (penet > 0)\r\n    {\r\n        ball.fx += dx*penet/dist*constant.elastic     // add a suck variable with -1 or +1 value\r\n        ball.fy += dy*penet/dist*constant.elastic\r\n    }\r\n}\r\n\r\nfunction update_vel_reset_force(ball) {\r\n    ball.dx += ball.fx/ball.mass*constant.time\r\n    ball.dy += ball.fy/ball.mass*constant.time\r\n    ball.dx = ball.dx/constant.friction\r\n    ball.dy = ball.dy/constant.friction\r\n    ball.x += ball.dx\r\n    ball.y += ball.dy\r\n    ball.fy = constant.gravity*ball.mass\r\n    ball.fx = 0.0\r\n}\r\n\r\nsim = new Object()\r\nsim.run = function () \r\n{\r\n    if (constant.paused == true) {return}\r\n    sim.canvas = document.getElementById(\"balls_canvas\")\r\n    sim.context = sim.canvas.getContext(\"2d\")\r\n    sim.canvas.width = window.innerWidth\r\n    sim.canvas.height = window.innerHeight\r\n    sim.list = new Array\r\n    for (i=0; i < initial_balls; i++)\r\n    {\r\n        sim.list.push(new ball(i, Math.random()*sim.canvas.width, Math.random()*sim.canvas.height))\r\n    }\r\n    sim.update = function ()\r\n    {\r\n        for (i = 0; i < sim.list.length; i++)\r\n        {\r\n            // collision with another ball\r\n            for (o = i+1; o < sim.list.length; o++)\r\n            {\r\n                apply_force_pair(sim.list[i], sim.list[o])                    \r\n            }\r\n\r\n            apply_wall_force(sim.list[i])\r\n            apply_mouse_force(sim.list[i])\r\n        }\r\n\r\n        \r\n        // apply forces and clear them\r\n        for (i in sim.list)\r\n        {\r\n            update_vel_reset_force(sim.list[i])\r\n        }\r\n        \r\n        // clear screen\r\n        sim.context.clearRect(0,0,sim.canvas.width,sim.canvas.height) \r\n\r\n        // render balls\r\n        for (i in sim.list)\r\n        {\r\n            sim.context.fillStyle = \"rgb(0,0,\"+sim.list[i].hit+\")\"\r\n            sim.context.beginPath()\r\n            sim.context.arc(sim.list[i].x,sim.list[i].y,sim.list[i].size,0,Math.PI*2,true)\r\n            sim.context.closePath()\r\n            sim.context.fill()\r\n            sim.context.stroke()\r\n            \r\n            if (sim.list[i].hit > 10){sim.list[i].hit -= 10}\r\n            \r\n        }\r\n    }\r\n    sim.canvas.addEventListener(\"mousemove\", \r\n                        function(e) {\r\n                                        sim.mouse_x = (e.clientX-this.offsetLeft)\r\n                                        sim.mouse_y = (e.clientY-this.offsetTop) \r\n                                    }, false)\r\n    sim.canvas.addEventListener(\"click\", function(e) {sim.list.push(new ball(sim.list.length-1, sim.mouse_x, sim.mouse_y+40))}, false)\r\n    window.addEventListener(\"resize\",function(e) {\r\n                            sim.canvas.width = window.innerWidth;\r\n                            sim.canvas.height = window.innerHeight\r\n                        },false)\r\n    window.addEventListener(\"keydown\", function(e) {if (e.keyCode == 32) constant.paused = !constant.paused})\r\n    \t\t\t    \r\n    setInterval(sim.update, 1000/100)\r\n}"]}