{"version":3,"sources":["src/vec2.js","src/toy.js"],"names":["Vec2","x","y","module","exports","require","constant","Object","ball","i","id","dx","dy","fx","fy","hit","size","Math","random","mass","apply_force_pair","ball_a","ball_b","dist","sqrt","penet","elastic","friction","gravity","time","paused","initial_balls","sim","run","canvas","document","getElementById","context","getContext","width","window","innerWidth","height","innerHeight","list","Array","push","update","length","o","mouse_x","mouse_y","clearRect","fillStyle","beginPath","arc","PI","closePath","fill","stroke","addEventListener","e","clientX","offsetLeft","clientY","offsetTop","keyCode","setInterval"],"mappings":"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","file":"toy.c9dfbd40.js","sourceRoot":"..","sourcesContent":["\nclass Vec2 {\n    constructor(x, y) {\n        this.x = x\n        this.y = y\n    }\n}\n\nmodule.exports = Vec2;\n","\r\n// This does not do anything, other than prove\r\n// the build process is working.\r\nconst Vec2 = require('./vec2');\r\n(new Vec2(1, 0));\r\n\r\nvar constant = new Object()\r\nconstant.friction = 1.02\r\nconstant.elastic = 2000\r\nconstant.gravity = 0\r\nconstant.time = 0.01\r\nconstant.paused = false\r\n\r\ninitial_balls = 100\r\n\r\nfunction ball(i, x, y)\r\n{\r\n    this.id = i\r\n    this.x = x\r\n    this.y = y\r\n    this.dx = 0.0\r\n    this.dy = -10.0\r\n    this.fx = 0.0\r\n    this.fy = 0.0\r\n    this.hit = 0.0\r\n    this.size = 20 + Math.random() * 10\r\n    this.mass = (this.size*this.size*3.14)/10\r\n}\r\n\r\nfunction apply_force_pair(ball_a, ball_b) {\r\n    var dx = (ball_a.x-ball_b.x)\r\n    var dy = (ball_a.y-ball_b.y)\r\n    var dist = Math.sqrt(dx*dx + dy*dy)\r\n    var penet = ball_a.size+ball_b.size-dist\r\n    if (penet > 0)\r\n    {\r\n        if (ball_a.hit < 225) {ball_a.hit += 30}\r\n        else {ball_a.hit = 255}\r\n        if (ball_b.hit < 255){ball_b.hit += 30}\r\n        else {ball_b.hit = 255}\r\n        ball_a.fx += dx*penet/dist*constant.elastic\r\n        ball_b.fx -= dx*penet/dist*constant.elastic\r\n        ball_a.fy += dy*penet/dist*constant.elastic\r\n        ball_b.fy -= dy*penet/dist*constant.elastic \r\n    }\r\n}\r\n\r\nsim = new Object()\r\nsim.run = function () \r\n{\r\n    if (constant.paused == true) {return}\r\n    sim.canvas = document.getElementById(\"balls_canvas\")\r\n    sim.context = sim.canvas.getContext(\"2d\")\r\n    sim.canvas.width = window.innerWidth\r\n    sim.canvas.height = window.innerHeight\r\n    sim.list = new Array\r\n    for (i=0; i < initial_balls; i++)\r\n    {\r\n        sim.list.push(new ball(i, Math.random()*sim.canvas.width, Math.random()*sim.canvas.height))\r\n    }\r\n    sim.update = function ()\r\n    {\r\n        for (i = 0; i < sim.list.length; i++)\r\n        {\r\n            // collision with another ball\r\n            for (o = i+1; o < sim.list.length; o++)\r\n            {\r\n                apply_force_pair(sim.list[i], sim.list[o])                    \r\n            }\r\n                    \r\n            // collision with the walls\r\n            if (sim.list[i].x - sim.list[i].size < 0)                 {sim.list[i].fx -= (sim.list[i].x - sim.list[i].size)*constant.elastic}\r\n            if (sim.list[i].x + sim.list[i].size > sim.canvas.width)  {sim.list[i].fx -= (sim.list[i].x +sim.list[i].size - sim.canvas.width)*constant.elastic}\r\n            if (sim.list[i].y - sim.list[i].size < 0)                 {sim.list[i].fy -= (sim.list[i].y - sim.list[i].size)*constant.elastic}\r\n            if (sim.list[i].y + sim.list[i].size > sim.canvas.height) {sim.list[i].fy -= (sim.list[i].y + sim.list[i].size - sim.canvas.height)*constant.elastic}\r\n\r\n            // collision with mouse\r\n            var dx = (sim.list[i].x-sim.mouse_x)\r\n            var dy = (sim.list[i].y-sim.mouse_y)\r\n            var dist = Math.sqrt(dx*dx + dy*dy)\r\n            var penet = 100-dist\r\n            if (penet > 0)\r\n            {\r\n                sim.list[i].fx += dx*penet/dist*constant.elastic     // add a suck variable with -1 or +1 value\r\n                sim.list[i].fy += dy*penet/dist*constant.elastic\r\n            }\r\n        }\r\n\r\n        // apply forces and clear them\r\n        for (i in sim.list)\r\n        {\r\n            sim.list[i].dx += sim.list[i].fx/sim.list[i].mass*constant.time\r\n            sim.list[i].dy += sim.list[i].fy/sim.list[i].mass*constant.time\r\n            sim.list[i].dx = sim.list[i].dx/constant.friction\r\n            sim.list[i].dy = sim.list[i].dy/constant.friction\r\n            sim.list[i].x += sim.list[i].dx\r\n            sim.list[i].y += sim.list[i].dy\r\n            sim.list[i].fy = constant.gravity*sim.list[i].mass\r\n            sim.list[i].fx = 0.0\r\n        }\r\n        \r\n        // clear screen\r\n        sim.context.clearRect(0,0,sim.canvas.width,sim.canvas.height) \r\n\r\n        // render balls\r\n        for (i in sim.list)\r\n        {\r\n            sim.context.fillStyle = \"rgb(0,0,\"+sim.list[i].hit+\")\"\r\n            sim.context.beginPath()\r\n            sim.context.arc(sim.list[i].x,sim.list[i].y,sim.list[i].size,0,Math.PI*2,true)\r\n            sim.context.closePath()\r\n            sim.context.fill()\r\n            sim.context.stroke()\r\n            \r\n            if (sim.list[i].hit > 10){sim.list[i].hit -= 10}\r\n            \r\n        }\r\n    }\r\n    sim.canvas.addEventListener(\"mousemove\", \r\n                        function(e) {\r\n                                        sim.mouse_x = (e.clientX-this.offsetLeft)\r\n                                        sim.mouse_y = (e.clientY-this.offsetTop) \r\n                                    }, false)\r\n    sim.canvas.addEventListener(\"click\", function(e) {sim.list.push(new ball(sim.list.length-1, sim.mouse_x, sim.mouse_y+40))}, false)\r\n    window.addEventListener(\"resize\",function(e) {\r\n                            sim.canvas.width = window.innerWidth;\r\n                            sim.canvas.height = window.innerHeight\r\n                        },false)\r\n    window.addEventListener(\"keydown\", function(e) {if (e.keyCode == 32) constant.paused = !constant.paused})\r\n    \t\t\t    \r\n    setInterval(sim.update, 1000/100)\r\n}"]}