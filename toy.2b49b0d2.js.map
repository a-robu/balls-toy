{"version":3,"sources":["src/vec2.js","src/toy.js"],"names":["Vec2","x","y","module","exports","require","constant","Object","ball","i","id","dx","dy","fx","fy","hit","size","Math","random","mass","friction","elastic","gravity","time","paused","initial_balls","spawn_balls","n","balls","push","sim","canvas","width","height","apply_force_pair","ball_a","ball_b","dist","sqrt","penet","apply_wall_force","apply_mouse_force","mouse_x","mouse_y","update_vel_reset_force","run","document","getElementById","context","getContext","window","innerWidth","innerHeight","list","update","length","o","clearRect","fillStyle","beginPath","arc","PI","closePath","fill","stroke","addEventListener","e","clientX","offsetLeft","clientY","offsetTop","keyCode","setInterval"],"mappings":";AAQA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAPMA,IAAAA,EACF,SAAYC,EAAAA,EAAGC,GAAG,EAAA,KAAA,GACTD,KAAAA,EAAIA,EACJC,KAAAA,EAAIA,GAIjBC,OAAOC,QAAUJ;;ACLjB,IAAMA,EAAOK,QAAQ,UACpB,IAAIL,EAAK,EAAG,GAEb,IAAIM,EAAW,IAAIC,OASnB,SAASC,EAAKC,EAAGR,EAAGC,GAEXQ,KAAAA,GAAKD,EACLR,KAAAA,EAAIA,EACJC,KAAAA,EAAIA,EACJS,KAAAA,GAAK,EACLC,KAAAA,IAAM,GACNC,KAAAA,GAAK,EACLC,KAAAA,GAAK,EACLC,KAAAA,IAAM,EACNC,KAAAA,KAAO,GAAqB,GAAhBC,KAAKC,SACjBC,KAAAA,KAAQ,KAAKH,KAAK,KAAKA,KAAK,KAAM,GAnB3CV,EAASc,SAAW,KACpBd,EAASe,QAAU,IACnBf,EAASgB,QAAU,EACnBhB,EAASiB,KAAO,IAChBjB,EAASkB,QAAS,EAElBC,cAAgB,IAgBhB,IAAMC,EAAc,SAAAC,GACZC,IAAAA,EAAQ,GACPnB,IAAAA,EAAE,EAAGA,EAAIkB,EAAGlB,IAEbmB,EAAMC,KAAK,IAAIrB,EAAKC,EAAGQ,KAAKC,SAASY,IAAIC,OAAOC,MAAOf,KAAKC,SAASY,IAAIC,OAAOE,SAE7EL,OAAAA,GAGX,SAASM,EAAiBC,EAAQC,GAC1BzB,IAAAA,EAAMwB,EAAOlC,EAAEmC,EAAOnC,EACtBW,EAAMuB,EAAOjC,EAAEkC,EAAOlC,EACtBmC,EAAOpB,KAAKqB,KAAK3B,EAAGA,EAAKC,EAAGA,GAC5B2B,EAAQJ,EAAOnB,KAAKoB,EAAOpB,KAAKqB,EAChCE,EAAQ,IAEJJ,EAAOpB,IAAM,IAAMoB,EAAOpB,KAAO,GAC/BoB,EAAOpB,IAAM,IACfqB,EAAOrB,IAAM,IAAKqB,EAAOrB,KAAO,GAC9BqB,EAAOrB,IAAM,IACnBoB,EAAOtB,IAAMF,EAAG4B,EAAMF,EAAK/B,EAASe,QACpCe,EAAOvB,IAAMF,EAAG4B,EAAMF,EAAK/B,EAASe,QACpCc,EAAOrB,IAAMF,EAAG2B,EAAMF,EAAK/B,EAASe,QACpCe,EAAOtB,IAAMF,EAAG2B,EAAMF,EAAK/B,EAASe,SAI5C,SAASmB,EAAiBhC,GAElBA,EAAKP,EAAIO,EAAKQ,KAAO,IAAoBR,EAAKK,KAAOL,EAAKP,EAAIO,EAAKQ,MAAMV,EAASe,SAClFb,EAAKP,EAAIO,EAAKQ,KAAOc,IAAIC,OAAOC,QAASxB,EAAKK,KAAOL,EAAKP,EAAGO,EAAKQ,KAAOc,IAAIC,OAAOC,OAAO1B,EAASe,SACpGb,EAAKN,EAAIM,EAAKQ,KAAO,IAAoBR,EAAKM,KAAON,EAAKN,EAAIM,EAAKQ,MAAMV,EAASe,SAClFb,EAAKN,EAAIM,EAAKQ,KAAOc,IAAIC,OAAOE,SAASzB,EAAKM,KAAON,EAAKN,EAAIM,EAAKQ,KAAOc,IAAIC,OAAOE,QAAQ3B,EAASe,SAG9G,SAASoB,EAAkBjC,GACnBG,IAAAA,EAAMH,EAAKP,EAAE6B,IAAIY,QACjB9B,EAAMJ,EAAKN,EAAE4B,IAAIa,QACjBN,EAAOpB,KAAKqB,KAAK3B,EAAGA,EAAKC,EAAGA,GAC5B2B,EAAQ,IAAIF,EACZE,EAAQ,IAER/B,EAAKK,IAAMF,EAAG4B,EAAMF,EAAK/B,EAASe,QAClCb,EAAKM,IAAMF,EAAG2B,EAAMF,EAAK/B,EAASe,SAI1C,SAASuB,EAAuBpC,GAC5BA,EAAKG,IAAMH,EAAKK,GAAGL,EAAKW,KAAKb,EAASiB,KACtCf,EAAKI,IAAMJ,EAAKM,GAAGN,EAAKW,KAAKb,EAASiB,KACtCf,EAAKG,GAAKH,EAAKG,GAAGL,EAASc,SAC3BZ,EAAKI,GAAKJ,EAAKI,GAAGN,EAASc,SAC3BZ,EAAKP,GAAKO,EAAKG,GACfH,EAAKN,GAAKM,EAAKI,GACfJ,EAAKM,GAAKR,EAASgB,QAAQd,EAAKW,KAChCX,EAAKK,GAAK,EAGdiB,IAAM,IAAIvB,OACVuB,IAAIe,IAAM,WAEiB,GAAnBvC,EAASkB,SACbM,IAAIC,OAASe,SAASC,eAAe,gBACrCjB,IAAIkB,QAAUlB,IAAIC,OAAOkB,WAAW,MACpCnB,IAAIC,OAAOC,MAAQkB,OAAOC,WAC1BrB,IAAIC,OAAOE,OAASiB,OAAOE,YAC3BtB,IAAIuB,KAAO3B,EAAYD,eACvBK,IAAIwB,OAAS,WAEJ7C,IAAAA,EAAI,EAAGA,EAAIqB,IAAIuB,KAAKE,OAAQ9C,IACjC,CAES+C,IAAAA,EAAI/C,EAAE,EAAG+C,EAAI1B,IAAIuB,KAAKE,OAAQC,IAE/BtB,EAAiBJ,IAAIuB,KAAK5C,GAAIqB,IAAIuB,KAAKG,IAG3ChB,EAAiBV,IAAIuB,KAAK5C,IAC1BgC,EAAkBX,IAAIuB,KAAK5C,IAK1BA,IAAAA,KAAKqB,IAAIuB,KAEVT,EAAuBd,IAAIuB,KAAK5C,IAO/BA,IAAAA,KAHLqB,IAAIkB,QAAQS,UAAU,EAAE,EAAE3B,IAAIC,OAAOC,MAAMF,IAAIC,OAAOE,QAG5CH,IAAIuB,KAEVvB,IAAIkB,QAAQU,UAAY,WAAW5B,IAAIuB,KAAK5C,GAAGM,IAAI,IACnDe,IAAIkB,QAAQW,YACZ7B,IAAIkB,QAAQY,IAAI9B,IAAIuB,KAAK5C,GAAGR,EAAE6B,IAAIuB,KAAK5C,GAAGP,EAAE4B,IAAIuB,KAAK5C,GAAGO,KAAK,EAAU,EAARC,KAAK4C,IAAK,GACzE/B,IAAIkB,QAAQc,YACZhC,IAAIkB,QAAQe,OACZjC,IAAIkB,QAAQgB,SAERlC,IAAIuB,KAAK5C,GAAGM,IAAM,KAAIe,IAAIuB,KAAK5C,GAAGM,KAAO,KAIrDe,IAAIC,OAAOkC,iBAAiB,YACR,SAASC,GACOpC,IAAIY,QAAWwB,EAAEC,QAAQ,KAAKC,WAC9BtC,IAAIa,QAAWuB,EAAEG,QAAQ,KAAKC,YAC/B,GACnCxC,IAAIC,OAAOkC,iBAAiB,QAAS,SAASC,GAAIpC,IAAIuB,KAAKxB,KAAK,IAAIrB,EAAKsB,IAAIuB,KAAKE,OAAO,EAAGzB,IAAIY,QAASZ,IAAIa,QAAQ,OAAO,GAC5HO,OAAOe,iBAAiB,SAAS,SAASC,GAClBpC,IAAIC,OAAOC,MAAQkB,OAAOC,WAC1BrB,IAAIC,OAAOE,OAASiB,OAAOE,cAC7B,GACtBF,OAAOe,iBAAiB,UAAW,SAASC,GAAqB,IAAbA,EAAEK,UAAejE,EAASkB,QAAUlB,EAASkB,UAEjGgD,YAAY1C,IAAIwB,OAAQ","file":"toy.2b49b0d2.js","sourceRoot":"..","sourcesContent":["\nclass Vec2 {\n    constructor(x, y) {\n        this.x = x\n        this.y = y\n    }\n}\n\nmodule.exports = Vec2;\n","\r\n// This does not do anything, other than prove\r\n// the build process is working.\r\nconst Vec2 = require('./vec2');\r\n(new Vec2(1, 0));\r\n\r\nvar constant = new Object()\r\nconstant.friction = 1.02\r\nconstant.elastic = 2000\r\nconstant.gravity = 0\r\nconstant.time = 0.01\r\nconstant.paused = false\r\n\r\ninitial_balls = 100\r\n\r\nfunction ball(i, x, y)\r\n{\r\n    this.id = i\r\n    this.x = x\r\n    this.y = y\r\n    this.dx = 0.0\r\n    this.dy = -10.0\r\n    this.fx = 0.0\r\n    this.fy = 0.0\r\n    this.hit = 0.0\r\n    this.size = 20 + Math.random() * 10\r\n    this.mass = (this.size*this.size*3.14)/10\r\n}\r\n\r\nconst spawn_balls = n => {\r\n    let balls = []\r\n    for (i=0; i < n; i++)\r\n    {\r\n        balls.push(new ball(i, Math.random()*sim.canvas.width, Math.random()*sim.canvas.height))\r\n    }\r\n    return balls\r\n}\r\n\r\nfunction apply_force_pair(ball_a, ball_b) {\r\n    var dx = (ball_a.x-ball_b.x)\r\n    var dy = (ball_a.y-ball_b.y)\r\n    var dist = Math.sqrt(dx*dx + dy*dy)\r\n    var penet = ball_a.size+ball_b.size-dist\r\n    if (penet > 0)\r\n    {\r\n        if (ball_a.hit < 225) {ball_a.hit += 30}\r\n        else {ball_a.hit = 255}\r\n        if (ball_b.hit < 255){ball_b.hit += 30}\r\n        else {ball_b.hit = 255}\r\n        ball_a.fx += dx*penet/dist*constant.elastic\r\n        ball_b.fx -= dx*penet/dist*constant.elastic\r\n        ball_a.fy += dy*penet/dist*constant.elastic\r\n        ball_b.fy -= dy*penet/dist*constant.elastic \r\n    }\r\n}\r\n\r\nfunction apply_wall_force(ball) {\r\n    // collision with the walls\r\n    if (ball.x - ball.size < 0)                 {ball.fx -= (ball.x - ball.size)*constant.elastic}\r\n    if (ball.x + ball.size > sim.canvas.width)  {ball.fx -= (ball.x +ball.size - sim.canvas.width)*constant.elastic}\r\n    if (ball.y - ball.size < 0)                 {ball.fy -= (ball.y - ball.size)*constant.elastic}\r\n    if (ball.y + ball.size > sim.canvas.height) {ball.fy -= (ball.y + ball.size - sim.canvas.height)*constant.elastic}\r\n}\r\n\r\nfunction apply_mouse_force(ball) {\r\n    var dx = (ball.x-sim.mouse_x)\r\n    var dy = (ball.y-sim.mouse_y)\r\n    var dist = Math.sqrt(dx*dx + dy*dy)\r\n    var penet = 100-dist\r\n    if (penet > 0)\r\n    {\r\n        ball.fx += dx*penet/dist*constant.elastic     // add a suck variable with -1 or +1 value\r\n        ball.fy += dy*penet/dist*constant.elastic\r\n    }\r\n}\r\n\r\nfunction update_vel_reset_force(ball) {\r\n    ball.dx += ball.fx/ball.mass*constant.time\r\n    ball.dy += ball.fy/ball.mass*constant.time\r\n    ball.dx = ball.dx/constant.friction\r\n    ball.dy = ball.dy/constant.friction\r\n    ball.x += ball.dx\r\n    ball.y += ball.dy\r\n    ball.fy = constant.gravity*ball.mass\r\n    ball.fx = 0.0\r\n}\r\n\r\nsim = new Object()\r\nsim.run = function () \r\n{\r\n    if (constant.paused == true) {return}\r\n    sim.canvas = document.getElementById(\"balls_canvas\")\r\n    sim.context = sim.canvas.getContext(\"2d\")\r\n    sim.canvas.width = window.innerWidth\r\n    sim.canvas.height = window.innerHeight\r\n    sim.list = spawn_balls(initial_balls)\r\n    sim.update = function ()\r\n    {\r\n        for (i = 0; i < sim.list.length; i++)\r\n        {\r\n            // collision with another ball\r\n            for (o = i+1; o < sim.list.length; o++)\r\n            {\r\n                apply_force_pair(sim.list[i], sim.list[o])                    \r\n            }\r\n\r\n            apply_wall_force(sim.list[i])\r\n            apply_mouse_force(sim.list[i])\r\n        }\r\n\r\n        \r\n        // apply forces and clear them\r\n        for (i in sim.list)\r\n        {\r\n            update_vel_reset_force(sim.list[i])\r\n        }\r\n        \r\n        // clear screen\r\n        sim.context.clearRect(0,0,sim.canvas.width,sim.canvas.height) \r\n\r\n        // render balls\r\n        for (i in sim.list)\r\n        {\r\n            sim.context.fillStyle = \"rgb(0,0,\"+sim.list[i].hit+\")\"\r\n            sim.context.beginPath()\r\n            sim.context.arc(sim.list[i].x,sim.list[i].y,sim.list[i].size,0,Math.PI*2,true)\r\n            sim.context.closePath()\r\n            sim.context.fill()\r\n            sim.context.stroke()\r\n            \r\n            if (sim.list[i].hit > 10){sim.list[i].hit -= 10}\r\n            \r\n        }\r\n    }\r\n    sim.canvas.addEventListener(\"mousemove\", \r\n                        function(e) {\r\n                                        sim.mouse_x = (e.clientX-this.offsetLeft)\r\n                                        sim.mouse_y = (e.clientY-this.offsetTop) \r\n                                    }, false)\r\n    sim.canvas.addEventListener(\"click\", function(e) {sim.list.push(new ball(sim.list.length-1, sim.mouse_x, sim.mouse_y+40))}, false)\r\n    window.addEventListener(\"resize\",function(e) {\r\n                            sim.canvas.width = window.innerWidth;\r\n                            sim.canvas.height = window.innerHeight\r\n                        },false)\r\n    window.addEventListener(\"keydown\", function(e) {if (e.keyCode == 32) constant.paused = !constant.paused})\r\n    \t\t\t    \r\n    setInterval(sim.update, 1000/100)\r\n}"]}